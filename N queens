import java.util.Scanner;


public class Main {

	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int n = s.nextInt();
		placeNQueens(n);	
	}
 public static boolean isSafe(int[][] board, int row,int coloumn)
    {
        int n=board.length;
      for(int j=0;j<board.length;j++)
      {
          if(board[row][j]==1)
          {
              return false;
          }
      }
      for(int i=0;i<board.length;i++)
      {
          if(board[i][coloumn]==1)
          {
              return false;
          }
      }
     int r=row;
     for(int c=coloumn;c>=0&&r>=0;c--,r--)
     {
         if(board[r][c]==1)
         {
             return false;
         }

     }
     r=row;
     for(int c=coloumn;c<n&&r>=0;c++,r--)
     {
         if(board[r][c]==1)
         {
             return false;
         }
     }
     r=row;
     for(int c=coloumn;c>=0&&r<n;c--,r++)
     {
         if(board[r][c]==1)
         {
             return false;
         }
     }
     r=row;
     for(int c=coloumn;c<n&&r<n;c++,r++)
     {
         if(board[r][c]==1)
         {
             return false;
         }
     }
    return true;
      
    }
    public static void nqueens(int[][] board,int row)
    {

        int m=board.length;
        if(row==m)
        {
            for(int i=0;i<m;i++)
            {
                for(int j=0;j<m;j++)
                {
                    System.out.print(board[i][j]+" ");
                }
            }
            System.out.println();
            return;
        }
        for(int i=0;i<m;i++)
        {
           if(isSafe(board,row,i))
           {
           board[row][i]=1;
           nqueens(board,row+1);
           board[row][i]=0;
           }
        }
    }
	
		
public static void placeNQueens(int n)
{	
   int [][]ans= new int[n][n];
   nqueens(ans,0);

}
	
}
